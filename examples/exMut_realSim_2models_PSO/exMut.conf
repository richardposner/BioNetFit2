model = exMutM2.bngl
exp_file = exMutM2.exp

output_dir = output/
#razi changes for test, originally it was bng_command = Simulators/BNG2.pl
#bng_command = random
bng_command = Simulators/BNG2.pl


job_name=testMut_realSim_2models_PSO

# Should be set to numberof CPU cores in cluster minus 1
population_size = 2

# In synchronous ga, maximim number of generations to run
max_generations = 5

# Stop when we reach this objective function value
min_fit = 0

# 1/0 = synchronous/asynchronous
synchronicity = 1

# ga = genetic algorithm
# de = differential evolution
# sa = simulated annealing
# pso = particle swarm
fit_type = pso

use_pipes = 0 #razi commented to run in windows 1

# Whether or not we're using a cluster
use_cluster = 0

# Cluster software (can be mpi, slurm, or torque)
cluster_software=mpi

# On non-cluster fits, how many sims to run at once
# parallel_count = 2 razi:commented
parallel_count = 1

# Verbosity
verbosity=3

# Whether or not to standardize simulation outputs
standardize_sim_data=0

# Whether or not to standardize .exp data
standardize_exp_data=0

# Whether or not to log transform simulation outputs
log_transform_sim_data=0

# Whether or not to divide simulation outputs by the value at t=0
divide_by_init=0

# Which objective function to use (see user manual at bionetfit.nau.edu)
objfunc=1

# In ga, whether to keep any parents unchanged between generations
keep_parents=1

# In ga, probability of swapping two parameters during breeding
swap_rate=0.5

extra_weight=0

# In ga, whether or not breeding parents must be different from each other
force_different_parents=1

delete_old_files=0

# Maximum number of simulation to run before quitting
max_num_simulations=2500

# Maximim time to let fit run before quitting
max_fit_time=00:60:00

# Whether or not to save cluster fit output
save_cluster_output=1

# How many simulations to average (good for noisy stochastic simulations)
smoothing=1

#seed=6

# In an asynchronous fit, output a run summary every n simulations
output_every=10

# In DE, the number of islands
num_islands=3

# In DE and SA, the mutation type
mutate_type=4

# In DE and SA, the crossover rate
cr=0.8

# In DE, how often particles migrate between islands
migration_frequency=8

# In DE, how many points to migrate during crossover
num_to_migrate=3

# In PSO, the inertia
inertia=0.82

# In PSO, the cognitive factor
cognitive = 1.49

# In PSO, the social factor
social = 1.49

#nmax = 20
nmin = 80

# In enhanced inertia, the initial inertia
inertiaInit = 1

# In enhanced inertia, the final inertia
inertiaFinal = 0.1

# Tolerances for enhanced PSO stop
abs_tolerance = 10e-4
rel_tolerance = 10e-4

# Whether or not to enable mutations in QPSO
mutate_qpso = 1

# Swarm topology in PSO, or island migration topology in DE, can be:
# ring
# toroidal
# star
# fullyconnected
# mesh
# tree
topology = fullyconnected

# PSO variant, can be:
# bbpso
# bbpsoexp
# pso (normal pso)
# qpso (quantum behaved particle swarm)
pso_type = pso

# Whether or not to use enhanced stop criteria in PSO (not sure if this works well)
enhanced_stop = 0

# Whether or not to use enhanced inertia in PSO
enhanced_inertia = 0

# Mutation parameter, probability, and factor
mutate=default 0.2 0.1

# Free parameters
loguniform_var=KD1 0.001 1000
loguniform_var=km1 0.001 1000
loguniform_var=K2RT 0.001 1000
loguniform_var=km2 0.001 1000
loguniform_var=kphos 0.001 1000
loguniform_var=kdephos 0.001 1000

#constraints sintax constraint=model1Param_logicalOP_model2Param
constraint=RLbonds>=pR
constraint=pR<=pR
constraint=RLbonds==RLbonds
